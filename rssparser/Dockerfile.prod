# BUILDER

# pull official base image
FROM python:3.6.9-alpine as builder

# set work directory
WORKDIR /usr/src/rssparser

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev


# install gcc
RUN apk add --no-cache --virtual .build-deps python3-dev gcc build-base
RUN pip install --upgrade pip

# # lint
# RUN pip install flake8
# COPY . /usr/src/rssparser/
# RUN flake8 --ignore=E501,F401 .


# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/rssparser/wheels -r requirements.txt

# FINAL

# pull official base image
FROM python:3.6.9-alpine

# create directory for the app user
RUN mkdir -p /home/rssparser

# create the app user
RUN addgroup -S rssparser && adduser -S rssparser -G rssparser

# create the appropriate directories
ENV HOME=/home/rssparser
ENV APP_HOME=/home/rssparser/api
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq
COPY --from=builder /usr/src/rssparser/wheels /wheels
COPY --from=builder /usr/src/rssparser/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the rssparser user
RUN chown -R rssparser:rssparser $APP_HOME

# change to the rssparser user
USER rssparser

# run entrypoint.prod.sh
ENTRYPOINT ["/home/rssparser/api/entrypoint.prod.sh"]
